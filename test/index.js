// Generated by CoffeeScript 1.7.1
(function() {
  var app, bestGroup, db, expect, group, request, urlencode;

  request = require("supertest");

  expect = require("chai").expect;

  urlencode = require("urlencode");

  app = void 0;

  db = void 0;

  group = {
    id: "http://circles.app.enspiral.com/loomiocommunity",
    prefixID: "circles:loomiocommunity",
    shortID: "loomiocommunity",
    name: "Loomio Community"
  };

  bestGroup = {
    id: "http://circles.app.enspiral.com/bestgroup",
    name: "Best Group"
  };

  request = request('http://localhost:5000');

  describe("#groups", function() {
    before(function() {});
    it("should GET /groups", function(done) {
      return request.get("/groups").expect("Content-Type", /json/).expect(200).expect(function(req) {
        var body, prop;
        body = req.body;
        for (prop in body[0]) {
          expect(body[0]).to.have.property(prop, body[0][prop]);
        }
      }).end(function(err, res) {
        if (err) {
          return done(err);
        }
        return done();
      });
    });
    it("should GET /groups/:id", function(done) {
      return request.get("/groups/" + urlencode(group.id)).expect("Content-Type", /json/).expect(200).expect(function(req) {
        var body, prop;
        body = req.body;
        expect(body).to.have.property("@type", "foaf:group");
        for (prop in body) {
          expect(body).to.have.property(prop, body[prop]);
        }
      }).end(function(err, res) {
        if (err) {
          return done(err);
        }
        return done();
      });
    });
    it("should GET /groups/:prefix:id", function(done) {
      return request.get("/groups/" + urlencode(group.prefixID)).expect("Content-Type", /json/).expect(200).expect(function(req) {
        var body, prop;
        body = req.body;
        expect(body).to.have.property("@type", "foaf:group");
        for (prop in body) {
          expect(body).to.have.property(prop, body[prop]);
        }
      }).end(function(err, res) {
        if (err) {
          return done(err);
        }
        return done();
      });
    });
    it("should GET /groups/:shortID", function(done) {
      return request.get("/groups/" + urlencode(group.shortID)).expect("Content-Type", /json/).expect(200).expect(function(req) {
        var body, prop;
        body = req.body;
        expect(body).to.have.property("@type", "foaf:group");
        for (prop in body) {
          expect(body).to.have.property(prop, body[prop]);
        }
      }).end(function(err, res) {
        if (err) {
          return done(err);
        }
        return done();
      });
    });
    it("should POST /groups", function(done) {
      return request.post("/groups").send(bestGroup).expect("Content-Type", /json/).expect(201).expect(function(req) {
        var body, prop;
        body = req.body;
        expect(body[0]).to.have.property("@type", "foaf:group");
        for (prop in body) {
          expect(body).to.have.property(prop, body[prop]);
        }
      }).end(function(err, res) {
        if (err) {
          return done(err);
        }
        return done();
      });
    });
    return it("should PUT /groups/:id", function(done) {
      return request.put("/groups/" + urlencode(group.id)).send(group).expect("Content-Type", /json/).expect(200).expect(function(req) {
        var body, prop;
        body = req.body;
        console.log(body);
        expect(body[0]).to.have.property("@type", "foaf:group");
        for (prop in body) {
          expect(body).to.have.property(prop, body[prop]);
        }
      }).end(function(err, res) {
        if (err) {
          return done(err);
        }
        return done();
      });
    });
  });

}).call(this);
